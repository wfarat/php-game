name: Deploy PHP App to Azure Container Apps

on:
  push:
    branches:
      - main

env:
  IMAGE_REGISTRY_URL: ghcr.io  # Change to ACR if needed
  DOCKER_IMAGE_NAME: php-game
  CONTAINER_ENV_NAME: php-game-env
  CONTAINER_APP_NAME: php-game-container
  RESOURCE_GROUP: php-game-group  # Your Azure Resource Group
  ACR_NAME: phpgame.azurecr.io  # Your Azure Container Registry (if using ACR)

jobs:
  Build-Docker-Image:
    runs-on: ubuntu-latest
    name: Build image and push to GitHub Container Registry
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push PHP Docker image
        uses: docker/build-push-action@v5
        with:
          context: .  # Uses your PHP Dockerfile in the root directory
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_REGISTRY_URL }}/${{ github.repository }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

  Deploy-to-Azure-Container-Apps:
    runs-on: ubuntu-latest
    needs: Build-Docker-Image
    name: Deploy PHP container to Azure Container Apps
    steps:
      - name: "Login to Azure"
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Azure Container App (if not exists)
        run: |
          EXISTS=$(az containerapp show --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --query "name" -o tsv || echo "notfound")
          if [ "$EXISTS" == "notfound" ]; then
            echo "Creating Azure Container App..."
            az containerapp create \
              --name ${{ env.CONTAINER_APP_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --environment ${{ env.CONTAINER_ENV_NAME }} \
              --image ${{ env.IMAGE_REGISTRY_URL }}/${{ github.repository }}/${{ env.DOCKER_IMAGE_NAME }}:latest \
              --target-port 80 \
              --ingress external \
              --registry-server ${{ env.IMAGE_REGISTRY_URL }} \
              --registry-username wfarat \
              --registry-password ${{ secrets.CR_PAT }}
          else
            echo "Container App already exists."
          fi

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          imageToDeploy: ${{ env.IMAGE_REGISTRY_URL }}/${{ github.repository }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          registryUrl: ${{ env.IMAGE_REGISTRY_URL }}
          registryPassword: ${{ secrets.CR_PAT }}
          registryUsername: wfarat

      - name: Logout from Azure
        run: az logout
